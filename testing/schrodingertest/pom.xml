<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010-2019 Evolveum and contributors
  ~
  ~ This work is dual-licensed under the Apache License 2.0
  ~ and European Union Public License. See LICENSE file for details.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>testing</artifactId>
        <groupId>com.evolveum.midpoint</groupId>
        <version>4.0.3.pre1</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>schrodingertest</artifactId>

    <properties>
        <project.starter.module>../../gui/admin-gui</project.starter.module>
        <project.app.package.name>com.evolveum.midpoint.web.boot.MidPointSpringApplication</project.app.package.name>
        <skipTests>false</skipTests>
        <server.port>8180</server.port>
        <midpoint.host>0.0.0.0</midpoint.host>
        <midpoint.home></midpoint.home>
        <javax.net.ssl.trustStore></javax.net.ssl.trustStore>
        <javax.net.ssl.trustStoreType></javax.net.ssl.trustStoreType>
    </properties>

    <dependencies>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>com.evolveum.midpoint.tools</groupId>
            <artifactId>schrodinger</artifactId>
            <version>4.0.3.pre1</version>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.codeborne</groupId>
            <artifactId>selenide</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-all</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-all</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.evolveum.midpoint.infra</groupId>
            <artifactId>schema</artifactId>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>net.sf.jasperreports</groupId>
                    <artifactId>jasperreports</artifactId>
                </exclusion>
            </exclusions>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.evolveum.midpoint.tools</groupId>
            <artifactId>test-ng</artifactId>
            <version>4.0.3.pre1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <exclusions>
                    <exclusion>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${failsafe.version}</version>
                <configuration>
                    <suiteXmlFiles>
                        <suiteXmlFile>testng-integration-schrodinger.xml</suiteXmlFile>
                    </suiteXmlFiles>
                    <!--<skipITs>true</skipITs>-->
                    <skipITs>${skipTests}</skipITs>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${antrun.version}</version>
                <executions>
                    <execution>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <skip>${skipTests}</skip>
                            <!--<skip>true</skip>-->
                            <target name="Midpoint ${project.version} booting up for integration testing, embedded Tomcat instance configured to listen on port: ${server.port}">
                                <exec dir="." executable="cmd" osfamily="windows"  spawn="true">
                                    <arg value="/c"/>
                                    <arg value="mvn"/>
                                    <arg value="-f"/>
                                    <arg value="${project.starter.module}/pom.xml"/>
                                    <arg value="spring-boot:run"/>
                                    <arg value="-Dmidpoint.schrodinger=true"/>
                                    <arg value="-Dmidpoint.home=${midpoint.home}"/>
                                    <arg value="-Dserver.port=${server.port}"/>
                                    <arg value="-Djavax.net.ssl.trustStoreType=${javax.net.ssl.trustStoreType}"/>
                                    <arg value="-Djavax.net.ssl.trustStore=${javax.net.ssl.trustStore}"/>
                                </exec>
                                <exec dir="." executable="sh" osfamily="unix" spawn="true">
                                    <arg line="-c 'mvn -f ${project.starter.module}/pom.xml spring-boot:run  -Dmidpoint.schrodinger=true -Dmidpoint.home=${midpoint.home} -Dserver.port=${server.port} -Djavax.net.ssl.trustStoreType=${javax.net.ssl.trustStoreType} -Djavax.net.ssl.trustStore=${javax.net.ssl.trustStore}'"/>
                                </exec>
                                <waitfor maxwait="600" maxwaitunit="second" checkevery="500" checkeveryunit="millisecond">
                                    <socket server="${midpoint.host}" port="${server.port}"/>
                                </waitfor>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <!--Shut down divided into execution blocks for cleanup purposes, not cool ... (check https://issues.apache.org/jira/browse/MANTRUN-86)-->
                    <execution>
                        <id>Attempt to execute the Shut-down-process</id>
                        <phase>post-integration-test</phase>
                        <configuration>
                            <skip>${skipTests}</skip>
                            <!--<skip>true</skip>-->
                            <target name="Shuting down Midpoint ${project.version} after integration testing, no cleaning up" unless="cleanup">
                                <exec executable="jps">
                                    <arg value="-l" />
                                    <redirector outputproperty="process.pid">
                                        <outputfilterchain>
                                            <linecontains>
                                                <contains value="${project.app.package.name}" />
                                            </linecontains>
                                            <replacestring from="${project.app.package.name}" />
                                            <trim/>
                                        </outputfilterchain>
                                    </redirector>
                                </exec>
                                <exec executable="taskkill" osfamily="windows" failonerror="true">
                                    <arg value="/PID" />
                                    <arg value="${process.pid}" />
                                    <arg value="/F" />
                                </exec>
                                <exec executable="kill" osfamily="unix" failonerror="true">
                                    <arg value="-15" />
                                    <arg value="${process.pid}" />
                                </exec>
                        </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>Shut-down-process and attempt to execute clean up</id>
                        <phase>post-integration-test</phase>
                        <configuration>
                            <skip>${skipTests}</skip>
                            <!--<skip>true</skip>-->
                            <target name="Shuting down Midpoint ${project.version} after integration testing, and cleaning up" if="cleanup">
                                <exec executable="jps">
                                    <arg value="-l" />
                                    <redirector outputproperty="process.pid">
                                        <outputfilterchain>
                                            <linecontains>
                                                <contains value="${project.app.package.name}" />
                                            </linecontains>
                                            <replacestring from="${project.app.package.name}" />
                                            <trim/>
                                        </outputfilterchain>
                                    </redirector>
                                </exec>
                                <exec executable="taskkill" osfamily="windows" failonerror="true">
                                    <arg value="/PID" />
                                    <arg value="${process.pid}" />
                                    <arg value="/F" />
                                </exec>
                                <exec executable="kill" osfamily="unix" failonerror="true">
                                    <arg value="-15" />
                                    <arg value="${process.pid}"/>
                                </exec>
                                <waitfor maxwait="20"  maxwaitunit="second" checkevery="500">
                                    <not>
                                        <socket port="${server.port}" server="${midpoint.host}"/>
                                    </not>
                                </waitfor>
                                <property environment="env"/>
                                <condition property ="e.home" value="${env.HOMEPATH}\midpoint" else="${env.HOME}/midpoint">
                                    <and>
                                        <os family="windows"/>
                                        <not>
                                            <os family="unix"/>
                                        </not>
                                    </and>
                                </condition>
                                <condition property ="home" value="${midpoint.home}" else="${e.home}">
                                    <and>
                                        <isset property="midpoint.home"/>
                                        <not>
                                            <length string="${midpoint.home}" trim="true" when="lt" length="1"/>
                                        </not>
                                    </and>
                                </condition>
                                <exec executable="cmd" osfamily="windows" failonerror="true">
                                    <arg line=' /c rmdir "${home}" /S /Q '/>
                                </exec>
                                <!--<exec executable="rm" osfamily="unix" failonerror="true">-->
                                    <!--<arg line="-rf ${home}"/>-->
                                <!--</exec>-->
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
